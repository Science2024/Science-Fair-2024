#include "LCDIC2.h"

// Set the LCD address to 0x27 for a 16 chars and 2-line display
LCDIC2 lcd(0x27, 16, 2);

#define samp_siz 4
#define rise_threshold 4
int sensorPin = A0;

void setup() {
  if (lcd.begin()) {
    lcd.clear();
    lcd.print("Pulse Rate:");
    lcd.setCursor(0, 1);
    lcd.print(" 00");
  }
  Serial.begin(9600);
}

void loop() {
  float reads[samp_siz], sum;
  long int now, ptr;
  float last, reader, start;
  float first, second, third, before, print_value;
  bool rising;
  int rise_count;
  int n;
  long int last_beat;

  for (int i = 0; i < samp_siz; i++)
    reads[i] = 0;
  sum = 0;
  ptr = 0;

  while (1) {
    n = 0;
    start = millis();
    reader = 0.;
    do {
      reader += analogRead(sensorPin);
      n++;
      now = millis();
    } while (now < start + 20);
    reader /= n;

    sum -= reads[ptr];
    sum += reader;
    reads[ptr] = reader;
    last = sum / samp_siz;

    if (last > before) {
      rise_count++;
      if (!rising && rise_count > rise_threshold) {
        rising = true;
        first = millis() - last_beat;
        last_beat = millis();

        print_value = 60000. / (0.4 * first + 0.3 * second + 0.3 * third);

        lcd.setCursor(1, 1); // Set cursor to the position where the two-digit pulse rate will be displayed
        char valueStr[4]; // Create a character array to hold the pulse rate as a string
        sprintf(valueStr, "%02d", int(print_value)); // Convert the integer to a two-digit string
        lcd.print(valueStr); // Display the two-digit pulse rate on the LCD

        Serial.print("Pulse Rate: ");
        Serial.println(int(print_value));

        third = second;
        second = first;
      }
    } else {
      rising = false;
      rise_count = 0;
    }
    before = last;
    ptr++;
    ptr %= samp_siz;
  }
}
